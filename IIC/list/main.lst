C51 COMPILER V9.54   MAIN                                                                  08/07/2016 10:35:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) TABS(2) OBJECT(.
                    -\output\main.obj)

line level    source

   1          #include <reg52.h>  
   2          #include <math.h>     
   3          #include <stdio.h>    
   4          #include <intrins.h>
   5          
   6          
   7          typedef unsigned char  uchar;
   8          typedef unsigned short ushort;
   9          typedef unsigned int   uint;
  10          
  11          
  12          // 定义51单片机端口
  13          #define DataPort P0       //LCD1602数据端口
  14          sbit    LCM_RS=P2^0;    //LCD1602命令端口   
  15          sbit    LCM_RW=P2^1;    //LCD1602命令端口   
  16          sbit    LCM_EN=P2^2;    //LCD1602命令端口 
  17          sbit    SCL=P1^0;     //IIC时钟引脚定义
  18          sbit    SDA=P1^1;     //IIC数据引脚定义
  19          
  20          
  21          // 定义MPU6050内部地址
  22          #define SMPLRT_DIV    0x19  //陀螺仪采样率，典型值：0x07(125Hz)
  23          #define CONFIG      0x1A  //低通滤波频率，典型值：0x06(5Hz)
  24          #define GYRO_CONFIG   0x1B  //陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
  25          #define ACCEL_CONFIG  0x1C  //加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
  26          #define ACCEL_XOUT_H  0x3B
  27          #define ACCEL_XOUT_L  0x3C
  28          #define ACCEL_YOUT_H  0x3D
  29          #define ACCEL_YOUT_L  0x3E
  30          #define ACCEL_ZOUT_H  0x3F
  31          #define ACCEL_ZOUT_L  0x40
  32          #define TEMP_OUT_H    0x41
  33          #define TEMP_OUT_L    0x42
  34          #define GYRO_XOUT_H   0x43
  35          #define GYRO_XOUT_L   0x44  
  36          #define GYRO_YOUT_H   0x45
  37          #define GYRO_YOUT_L   0x46
  38          #define GYRO_ZOUT_H   0x47
  39          #define GYRO_ZOUT_L   0x48
  40          #define PWR_MGMT_1    0x6B  //电源管理，典型值：0x00(正常启用)
  41          #define WHO_AM_I    0x75  //IIC地址寄存器(默认数值0x68，只读)
  42          #define SlaveAddress  0xD0  //IIC写入时的地址字节数据，+1为读取
  43          
  44          
  45          //MPU6050操作函数
  46          void  InitMPU6050();//初始化MPU6050
  47          void  Delay5us();
  48          void  I2C_Start();//I2C起始信号
  49          void  I2C_Stop();//I2C停止信号
  50          void  I2C_SendACK(bit ack);//I2C发送应答信号
  51          bit   I2C_RecvACK();//I2C接收应答信号
  52          void  I2C_SendByte(uchar dat);//向I2C总线发送一个字节数据
  53          uchar I2C_RecvByte();//从I2C总线接收一个字节数据
  54          void  display_ACCEL_x();//显示加速计X轴
C51 COMPILER V9.54   MAIN                                                                  08/07/2016 10:35:36 PAGE 2   

  55          void  display_ACCEL_y();//显示加速计Y轴
  56          void  display_ACCEL_z();//显示加速计Z轴
  57          uchar Single_ReadI2C(uchar REG_Address);//从I2C总线接收一个字节数据
  58          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);//从I2C设备读取一个字节数据
  59          
  60          
  61          //初始化MPU6050
  62          void InitMPU6050()
  63          {
  64   1        Single_WriteI2C(PWR_MGMT_1, 0x00);//解除休眠状态
  65   1        Single_WriteI2C(SMPLRT_DIV, 0x07);//陀螺仪采样率
  66   1        Single_WriteI2C(CONFIG, 0x06);//低通滤波频率
  67   1        Single_WriteI2C(GYRO_CONFIG, 0x18);//陀螺仪自检及测量范围
  68   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);//加速计自检、测量范围及高通滤波频率
  69   1      }
  70          
  71          
  72          
  73          //I2C起始信号
  74          void I2C_Start()
  75          {
  76   1          SDA = 1;                    //拉高数据线
  77   1          SCL = 1;                    //拉高时钟线
  78   1          Delay5us();                 //延时
  79   1          SDA = 0;                    //产生下降沿
  80   1          Delay5us();                 //延时
  81   1          SCL = 0;                    //拉低时钟线
  82   1      }
  83          
  84          
  85          
  86          //I2C停止信号
  87          void I2C_Stop()
  88          {
  89   1          SDA = 0;                    //拉低数据线
  90   1          SCL = 1;                    //拉高时钟线
  91   1          Delay5us();                 //延时
  92   1          SDA = 1;                    //产生上升沿
  93   1          Delay5us();                 //延时
  94   1      }
  95          
  96          
  97          
  98          //I2C发送应答信号
  99          //入口参数:ack (0:ACK应答    1:NAK非应答)
 100          void I2C_SendACK(bit ack)
 101          {
 102   1          SDA = ack;                  //写应答信号
 103   1          SCL = 1;                    //拉高时钟线
 104   1          Delay5us();                 //延时
 105   1          SCL = 0;                    //拉低时钟线
 106   1          Delay5us();                 //延时
 107   1      }
 108          
 109          
 110          
 111          
 112          //I2C接收应答信号
 113          bit I2C_RecvACK()
 114          {
 115   1          SCL = 1;                    //拉高时钟线
 116   1          Delay5us();                 //延时
C51 COMPILER V9.54   MAIN                                                                  08/07/2016 10:35:36 PAGE 3   

 117   1          CY = SDA;                   //读应答信号
 118   1          SCL = 0;                    //拉低时钟线
 119   1          Delay5us();                 //延时
 120   1          return CY;
 121   1      }
 122          
 123          
 124          
 125          
 126          //向I2C总线发送一个字节数据
 127          void I2C_SendByte(uchar dat)
 128          {
 129   1          uchar i;
 130   1          for (i=0; i<8; i++)         //8位计数器
 131   1          {
 132   2              dat <<= 1;              //移出数据的最高位
 133   2              SDA = CY;               //送数据口
 134   2              SCL = 1;                //拉高时钟线
 135   2              Delay5us();             //延时
 136   2              SCL = 0;                //拉低时钟线
 137   2              Delay5us();             //延时
 138   2          }
 139   1          I2C_RecvACK();
 140   1      }
 141          
 142          
 143          
 144          
 145          //从I2C总线接收一个字节数据
 146          uchar I2C_RecvByte()
 147          {
 148   1          uchar i;
 149   1          uchar dat = 0;
 150   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 151   1          for (i=0; i<8; i++)         //8位计数器
 152   1          {
 153   2              dat <<= 1;
 154   2              SCL = 1;                //拉高时钟线
 155   2              Delay5us();             //延时
 156   2              dat |= SDA;             //读数据               
 157   2              SCL = 0;                //拉低时钟线
 158   2              Delay5us();             //延时
 159   2          }
 160   1          return dat;
 161   1      }
 162          
 163          
 164          
 165          //向I2C设备写入一个字节数据
 166          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 167          {
 168   1          I2C_Start();                  //起始信号
 169   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 170   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 171   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 172   1          I2C_Stop();                   //发送停止信号
 173   1      }
 174          
 175          
 176          
 177          //从I2C设备读取一个字节数据
 178          uchar Single_ReadI2C(uchar REG_Address)
C51 COMPILER V9.54   MAIN                                                                  08/07/2016 10:35:36 PAGE 4   

 179          {
 180   1        uchar REG_data;
 181   1        I2C_Start();                   //起始信号
 182   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 183   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始  
 184   1        I2C_Start();                   //起始信号
 185   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 186   1        REG_data=I2C_RecvByte();       //读出寄存器数据
 187   1        I2C_SendACK(1);                //接收应答信号
 188   1        I2C_Stop();                    //停止信号
 189   1        return REG_data;
 190   1      }
 191          
 192          
 193          void main()
 194          { 
 195   1        delay(500);   //上电延时    
*** WARNING C206 IN LINE 195 OF main.c: 'delay': missing function-prototype
*** ERROR C267 IN LINE 195 OF main.c: 'delay': requires ANSI-style prototype
 196   1        InitLcd();    //液晶初始化
 197   1        InitMPU6050();  //初始化MPU6050
 198   1        delay(150);
 199   1        while(1)
 200   1        {
 201   2          Display10BitData(GetData(ACCEL_XOUT_H),2,0);  //显示X轴加速度
 202   2          Display10BitData(GetData(ACCEL_YOUT_H),7,0);  //显示Y轴加速度
 203   2          Display10BitData(GetData(ACCEL_ZOUT_H),12,0); //显示Z轴加速度
 204   2          Display10BitData(GetData(GYRO_XOUT_H),2,1); //显示X轴角速度
 205   2          Display10BitData(GetData(GYRO_YOUT_H),7,1); //显示Y轴角速度
 206   2          Display10BitData(GetData(GYRO_ZOUT_H),12,1);  //显示Z轴角速度
 207   2          delay(500);
 208   2        }
 209   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
